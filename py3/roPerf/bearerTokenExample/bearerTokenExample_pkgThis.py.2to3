RefactoringTool: Skipping optional fixer: buffer
RefactoringTool: Skipping optional fixer: idioms
RefactoringTool: Skipping optional fixer: set_literal
RefactoringTool: Skipping optional fixer: ws_comma
RefactoringTool: Refactored ./bearerTokenExample/py3/roPerf/bearerTokenExample/bearerTokenExample_pkgThis.py
RefactoringTool: Files that were modified:
RefactoringTool: ./bearerTokenExample/py3/roPerf/bearerTokenExample/bearerTokenExample_pkgThis.py
--- ./bearerTokenExample/py3/roPerf/bearerTokenExample/bearerTokenExample_pkgThis.py	(original)
+++ ./bearerTokenExample/py3/roPerf/bearerTokenExample/bearerTokenExample_pkgThis.py	(refactored)
@@ -155,7 +155,7 @@
             argChoices.pop(0)
             actions = argChoices
         for each in actions:
-            print each
+            print(each)
             if interactive:
                 #print( str( __doc__ ) )  # This is the Summary: from the top doc-string
                 #version(interactive=True)
@@ -263,7 +263,7 @@
         for each in actions:
             if interactive:
                 exec("""retVal = {}()""".format(each))
-                print("""{each}={retVal}""".format(each=each, retVal=retVal))
+                print(("""{each}={retVal}""".format(each=each, retVal=retVal)))
                 
         return cmndOutcome.set(
             opError=icm.OpError.Success,
